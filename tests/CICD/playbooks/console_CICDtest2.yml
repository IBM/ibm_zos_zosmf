# Copyright (c) IBM Corporation 2020 

# This sample playbook demonstrates using module `zmf_console_command` to issue MVS command by using a system console.
# Example:
# ansible-playbook -i hosts sample_module_console_command.yml

- name: sample of issuing MVS command by using a system console
  hosts: console
  gather_facts: no
  collections:
    - ibm.ibm_zos_zosmf
  tasks:
    - zmf_authenticate:
        zmf_host: "{{ zmf_host }}"
        zmf_port: "{{ zmf_port }}"
        zmf_user: "{{ zmf_user }}"
        zmf_password: "{{ zmf_password }}"
      register: result_auth
      delegate_to: localhost
    - zmf_console_command:
        zmf_credential: "{{ result_auth }}"
        console_cmd: "D A,L"
        console_system: "{{ inventory_hostname }}"
        # console_cmdresponse_keyword: "SLP registration initiated" # The keyword that you want to detect in the command response. The module will fail if no specified keywords are detected in neither the command response nor broadcast messages
        # console_cmdresponse_reg: "N" # Whether console_cmdresponse_keyword represents a regular expression. Default is 'N'
        # console_broadcastmsg_keyword: "started CIM server" # The keyword that you want to detect in broadcast messages. The module will fail if no specified keywords are detected in neither the command response nor broadcast messages
        # console_broadcastmsg_reg: "N" # Whether console_broadcastmsg_keyword represents a regular expression. Default is 'N'
        # console_broadcastmsg_detect_timeout: 30 # How long, in seconds, the console attempts to detect the value of console_broadcastmsg_keyword in the broadcast messages. Default is 30
        # console_cmdresponse_retrieve_times: 1 # How many times the console attempts to retrieve the command response. Default is 1
        console_save_output_localpath: "/Users/strangepear2019/.ansible/collections/ansible_collections/ibm/ibm_zos_zosmf/playbooks/cmd_output" # The local path on control node where the command response will be saved to
      register: result
      delegate_to: localhost
    - debug: var=result

